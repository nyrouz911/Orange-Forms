pipeline {
  agent any

  options {
    timestamps()
    buildDiscarder(logRotator(numToKeepStr: '20'))
    skipStagesAfterUnstable()
  }

  parameters {
    booleanParam(name: 'DEPLOY_TO_PROD', defaultValue: false, description: 'Trigger Vercel Production deploy')
  }

  environment {
    CI = 'true'
    NEXT_TELEMETRY_DISABLED = '1'
    EMAIL_TO = 'nayrouz.tebib@esprit.tn'
  }

  stages {
    stage('Checkout') {
      steps {
        cleanWs()
        git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/nyrouz911/Orange-Forms.git'
      }
    }

    stage('Install / Lint / Typecheck / Test / Build') {
      steps {
        sh '''#!/usr/bin/env bash
set -euxo pipefail
if [ -f package-lock.json ]; then npm ci; elif [ -f pnpm-lock.yaml ]; then corepack enable && pnpm i --frozen-lockfile; else npm i; fi
npm run lint --if-present
npm run typecheck --if-present
npm test --if-present -- --ci --reporters=jest-junit --coverage || true
npm run build
'''
      }
      post {
  success {
    script {
      echo "[email] sending SUCCESS mail to ${env.EMAIL_TO}"
      try {
        emailext(
          from: 'yourname@gmail.com',              // MUST match the SMTP account
          to: env.EMAIL_TO,
          subject: "[${env.JOB_NAME}] #${env.BUILD_NUMBER} ✅ SUCCESS",
          mimeType: 'text/html',
          attachLog: true,
          body: """<h3>Build Succeeded</h3>
<ul>
  <li><b>Job:</b> ${env.JOB_NAME}</li>
  <li><b>Build #:</b> ${env.BUILD_NUMBER}</li>
  <li><b>Branch:</b> ${env.BRANCH_NAME ?: env.GIT_BRANCH ?: 'n/a'}</li>
  <li><b>URL:</b> <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></li>
</ul>"""
        )
      } catch (e) {
        echo "[email] emailext failed: ${e}. Trying basic mail()..."
        mail(
          from: 'yourname@gmail.com',
          to: env.EMAIL_TO,
          subject: "[${env.JOB_NAME}] #${env.BUILD_NUMBER} ✅ SUCCESS",
          body: "Build succeeded. ${env.BUILD_URL}"
        )
      }
    }
    echo "✅ CI passed"
  }

  failure {
    script {
      echo "[email] sending FAILURE mail to ${env.EMAIL_TO}"
      try {
        emailext(
          from: 'yourname@gmail.com',
          to: env.EMAIL_TO,
          subject: "[${env.JOB_NAME}] #${env.BUILD_NUMBER} ❌ FAILURE",
          mimeType: 'text/html',
          attachLog: true,
          body: """<h3>Build Failed</h3>
<ul>
  <li><b>Job:</b> ${env.JOB_NAME}</li>
  <li><b>Build #:</b> ${env.BUILD_NUMBER}</li>
  <li><b>Branch:</b> ${env.BRANCH_NAME ?: env.GIT_BRANCH ?: 'n/a'}</li>
  <li><b>URL:</b> <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></li>
</ul>"""
        )
      } catch (e) {
        echo "[email] emailext failed: ${e}. Trying basic mail()..."
        mail(
          from: 'yourname@gmail.com',
          to: env.EMAIL_TO,
          subject: "[${env.JOB_NAME}] #${env.BUILD_NUMBER} ❌ FAILURE",
          body: "Build failed. ${env.BUILD_URL}"
        )
      }
    }
    echo "❌ CI failed"
  }

  always {
    echo "Build URL: ${env.BUILD_URL}"
  }
}

